{"version":3,"sources":["logo.svg","Testing/currency.js","App.js","reportWebVitals.js","index.js"],"names":["CurrencyConvert","props","state","rate","first","second","currency","handleFirst","bind","handleSecond","event","this","setState","target","value","onChange","map","cur","onClick","axios","get","then","res","console","log","data","React","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,6DCIMA,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,MAAO,GACPC,OAAQ,GACRC,SAAS,CACT,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAGJ,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAnBL,E,wDAqBPE,GACVC,KAAKC,SAAS,CAACR,MAAOM,EAAMG,OAAOC,U,mCAExBJ,GACXC,KAAKC,SAAS,CAACP,OAAQK,EAAMG,OAAOC,U,+BAM3B,IAAD,OAQN,OAAO,gCAEK,qCACGH,KAAKT,MAAME,MADd,MACuB,mCAASO,KAAKT,MAAMC,KAAX,UAAmBQ,KAAKT,MAAME,MAA9B,YAAuCO,KAAKT,MAAMG,SAA3D,OAAgFM,KAAKT,MAAMG,UAGlH,wBAAQU,SAAUJ,KAAKJ,YAAvB,SACCI,KAAKT,MAAMI,SAASU,KAAI,SAAAC,GAAG,OAAK,wBAAQH,MAAOG,EAAf,SAAqBA,SAGtD,wBAAQF,SAAUJ,KAAKF,aAAvB,SACCE,KAAKT,MAAMI,SAASU,KAAI,SAAAC,GAAG,OAAK,wBAAQH,MAAOG,EAAf,SAAqBA,SAIrD,wBAAQC,QAAS,WAtBhB,IAACd,EAAMC,EAAND,EAuBQ,EAAKF,MAAME,MAvBbC,EAuBmB,EAAKH,MAAMG,OAtBnDc,IAAMC,IAAN,qDAAwDhB,EAAxD,YAAiEC,EAAjE,+CACKgB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,MAChB,EAAKb,SAAS,CAACT,KAAMmB,EAAIG,WAkBlB,4B,GAxDwBC,IAAMC,WCYpCC,MAZf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCIOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a343141f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport axios from 'axios';\n\n\nexport default class CurrencyConvert extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rate: [],\n            first: \"\",\n            second: \"\",\n            currency:[\n            'USD',\n            'KHR',\n            'THB',\n            'EUR', \n            'JPY',\n            'TWD',\n            'AUD',\n            'VND',\n            'CNY',\n            ]\n        }\n        this.handleFirst = this.handleFirst.bind(this);\n        this.handleSecond = this.handleSecond.bind(this);\n    }\n    handleFirst(event) {\n      this.setState({first: event.target.value});\n    }\n    handleSecond(event) {\n      this.setState({second: event.target.value});\n    }\n    \n    \n    \n\n    render () {\n      const getRate = (first,second) =>{\n        axios.get(`https://free.currconv.com/api/v7/convert?q=${first}_${second}&compact=ultra&apiKey=86b4441207e5be5fe6c4`)\n            .then(res => {\n              console.log(res.data)\n              this.setState({rate: res.data});\n            })\n      }\n        return <div>\n                    \n                    <div>\n                    1 {this.state.first} = <strong>{this.state.rate[`${this.state.first}_${this.state.second}`]} </strong>{this.state.second} \n                    </div>\n\n                    <select onChange={this.handleFirst}>\n                    {this.state.currency.map(cur => (<option value={cur}>{cur}</option>))}\n                    </select>\n                    \n                    <select onChange={this.handleSecond}>\n                    {this.state.currency.map(cur => (<option value={cur}>{cur}</option>))}\n                    </select>\n                    \n                    \n                     <button onClick={() => {\n                       getRate(this.state.first,this.state.second)\n                     }}>Convert</button>\n                </div>\n    }\n}\n// <input\n//                      type=\"text\" \n//                      value= {this.state.first} \n//                      onChange={this.handleFirst}\n//                      />\n//                     <input \n//                      type=\"text\" \n//                      value= {this.state.second} \n//                      onChange={this.handleSecond}\n//                      />","import logo from './logo.svg';\nimport './App.css';\nimport CurrencyConvert from './Testing/currency';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <CurrencyConvert />\n\n      </header>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}